######################################################
# tox environment configuration
######################################################
[tox]
usedevelop = True
minversion = 3.24.0
envlist = mypy,darglint,pipcheck,safety,pytest
sitepackages = true
toxworkdir = {toxinidir}/.environments
basepython = python3.8
passenv =
    CI_COMMIT_REF_SLUG  # passed for those using `pypi-util` for versioning
    PIP_EXTRA_INDEX_URL
requires =
    setuptools

[testenv]
usedevelop = True
deps =
     {[tox]requires}
     # sometimes there are packages that have poorly defined dependency versions
     #   this file is intended to prefigure restrictions on downstream packages
     #   that aren't well defined. Good restrictions can significantly reduce
     #   environment installation time.
     -c{toxinidir}/constraints.txt
     # packages required for executing test environment
     -r{toxinidir}/requirements-dev.txt
     # packages installed through system path to override standard requirements
     #   defaults to an empty file of no requirements. Paths should be preceded
     #   with `--editable` if you want  packages also be `usedevelop` enabled
     -r{toxinidir}/requirements-local.txt
commands =
    mypy: mypy src/
    pipcheck: {envpython} -m pipdeptree --warn fail

# This environment is only for development.
#   https://tox.readthedocs.io/en/latest/example/devenv.html
[testenv:venv]
envdir = {toxinidir}/venv
commands =

[testenv:darglint]
docstring_style = sphinx
strictness = long
commands =
    darglint: darglint -s sphinx src/

[testenv:pytest]
commands =
    # change `cov=` to the packaged subdirectories of `/src/`
    {envpython} -m pytest \
        --cov=csvnpm \
        --cov-report= \
        tests/ \
        {posargs:-m commit}
    coverage html
    coverage report --fail-under=1
